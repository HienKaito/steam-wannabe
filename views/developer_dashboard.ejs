<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Developer Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/dev_dashboard.css">
</head>
<body>
<!-- Header -->
<header class="d-flex justify-content-between align-items-center px-4 py-2">
    <h1 class="m-0">Developer Dashboard</h1>
    <div class="d-flex align-items-center">
        <span class="wallet-info mr-3">Wallet: $<%= developer.wallet.toFixed(2) %></span>
        <a href="/developer-games" class="btn btn-outline-light mr-2">My Games</a>
        <a href="/logout" class="btn btn-outline-danger">Logout</a>
    </div>
</header>

<!-- Upload Form -->
<div class="form-container">
    <h2>Upload New Game</h2>
    <div id="notification"></div>
    <form id="uploadForm" action="/upload-game" method="POST" enctype="multipart/form-data">
        <div class="form-group">
            <label for="title">Game Title:</label>
            <input type="text" id="title" name="title" class="form-control" placeholder="Enter game title" required>
        </div>

        <div class="form-group">
            <label for="category">Category:</label>
            <select id="category" name="category" class="form-control" required>
                <option value="Action">Action</option>
                <option value="Adventure">Adventure</option>
                <option value="Strategy">Strategy</option>
                <option value="Sports">Sports</option>
                <option value="Role-Playing Game - RPG">Role-Playing Game - RPG</option>
                <option value="First-Person Shooter - FPS">First-Person Shooter - FPS</option>
                <option value="Multiplayer Online Battle Arena - MOBA">Multiplayer Online Battle Arena - MOBA</option>
                <option value="Survival">Survival</option>
                <option value="Simulation">Simulation</option>
                <option value="Educational">Educational</option>
            </select>
        </div>

        <div class="form-group">
            <label for="price">Price ($):</label>
            <input type="number" id="price" name="price" class="form-control" min="0" step="0.01" placeholder="Enter price" required>
        </div>

        <div class="form-group">
            <label for="description">Description:</label>
            <textarea id="description" name="description" class="form-control" rows="3" placeholder="Enter game description" required></textarea>
        </div>

        <div class="form-group">
            <label for="gameDetails">Game Details:</label>
            <textarea id="gameDetails" name="gameDetails" class="form-control" rows="4" placeholder="Enter detailed info about the game" required></textarea>
        </div>

        <div class="form-group">
            <label for="image">Game Image:</label>
            <input type="file" id="image" name="image" class="form-control-file" accept="image/png" required>
        </div>

        <button type="submit" class="btn btn-primary btn-block">Upload Game</button>
    </form>
</div>

<script>
    const notification = document.getElementById('notification');

    function showNotification(message, type) {
        notification.textContent = message;
        notification.className = '';
        notification.classList.add(type);
        notification.style.display = 'block';
        setTimeout(() => {
            notification.style.display = 'none';
        }, 3000);
    }

    document.getElementById('uploadForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);

        try {
            const response = await fetch('/upload-game', {
                method: 'POST',
                body: formData,
            });

            const result = await response.json();

            if (response.ok) {
                showNotification('Game uploaded successfully!', 'success');
                e.target.reset();
            } else {
                showNotification(result.message || 'Game upload failed!', 'error');
            }
        } catch (error) {
            console.error(error);
            showNotification('Something went wrong. Please try again.', 'error');
        }
    });
</script>
</body>
</html>
